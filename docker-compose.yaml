services:
  app:
    build: .
    container_name: search-app
    depends_on:
      - mongodb
    networks:
      - mongo-network
      - qdrant-network
    volumes:
      - .:/app
      - ./data:/app/data
    env_file:
      - .env
    environment:
      # mongo
      MONGODB_HOST: mongodb 
      MONGODB_ADMIN_USER: ${MONGO_INITDB_ROOT_USERNAME}
      MONGODB_ADMIN_PASS: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_PORT: 27017

      # github
      GITHUB_TOKEN: ${AUTH_GITHUB_TOKEN}

      # openai
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # jina
      JINA_API_KEY: ${JINA_API_KEY}

      # proxy
      PROXY_USER: ${PROXY_USER}
      PROXY_PASSWORD: ${PROXY_PASSWORD}
      PROXY_ADDRESS1: ${PROXY_ADDRESS1}
      PROXY_ADDRESS2: ${PROXY_ADDRESS2}
      PROXY_ADDRESS3: ${PROXY_ADDRESS3}

      # qdrant
      QDRANT__SERVICE__API_KEY: ${QDRANT__SERVICE__API_KEY}

    ports:
      - "5009:5009"

  mongodb:
    image: mongo:7.0.0
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongodb-data/data:/data/db/
      - ./mongodb-log:/var/log/mongodb/
    networks:
      - mongo-network
    env_file:
      - .env 
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    
volumes:
  mongodb-data:
    driver: local
    name: mongodb-data
  mongodb-log:
    driver: local
    name: mongodb-log

networks:
  mongo-network:
    driver: bridge
    name: mongo-network
  qdrant-network:
    external: true
